컴포넌트는 잘게 쪼개라
프롭이 많다 (10개정도 ?) , 또는 100줄 정도? -> 다른 컴포넌트
styled 잘 쓰기 (성능 최적화)
//<Provider store={store}> no need
컴포넌트는 화면만 ! (fetch 자제) 라이브러리가 (redux)
리덕스 새로운객체(reducer 복사) 만드는 이유 -> 메모리(참조) , 타자
function 내보내기 export function () {}
"dev": "next -p 5000"
"build" : "next build"
최적화는 나주엥 해주자(문제가 생기면)
프론트엔드는 미리 데이터 구조를 알아야한다 (from Back end)
alt 는 시각장애인을 위함
폴더를 import 하면 자동으로 index.js가 불러와진다
앱솔 화면 꽉채우기 사각에 전부 0값
리덕스 썽크 사가 => 비동기 Async 가능하게함
dispatch를 여러번 가능하게 해주는것
셀프 디도스 공격하는(더블클릭) 프론트엔드는 최악=> 사가로 해결
npm rm redux-thunk
HOC 하이 오더 컴포넌트 (그.. app 같은놈)
Arrow 펑션은 뭐 return 이 필요없는듯
리듀서에서 불변성 지키면서 지우는거는 filter 로 많이함